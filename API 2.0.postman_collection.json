{
	"info": {
		"_postman_id": "eff056ec-5b87-4137-9e93-eb3da15fbd0e",
		"name": "API 2.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32405224"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Get Access Token 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"set access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(200);",
									"    pm.globals.set(\"access_token\", jsonData.data.access_token);",
									"    pm.environment.set(\"access_token\", jsonData.data.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.data.refresh_token);",
									"    pm.environment.set(\"access_token_seller\", jsonData.data.access_token);",
									"    pm.environment.set(\"refresh_token_seller\", jsonData.data.refresh_token);",
									"    // pm.environment.set(\"access_token_creator\", jsonData.data.access_token);",
									"    // pm.environment.set(\"refresh_token_creator\", jsonData.data.refresh_token);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://auth.tiktok-shops.com/api/v2/token/get?app_key={{app_key}}&app_secret={{app_secret}}&auth_code={{auth_code}}&grant_type=authorized_code",
							"protocol": "https",
							"host": [
								"auth",
								"tiktok-shops",
								"com"
							],
							"path": [
								"api",
								"v2",
								"token",
								"get"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "app_secret",
									"value": "{{app_secret}}"
								},
								{
									"key": "auth_code",
									"value": "{{auth_code}}"
								},
								{
									"key": "grant_type",
									"value": "authorized_code"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Authorized Shop",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Replace with your app secret  ",
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")    ",
									"    ",
									"function objKeySort(obj) {    ",
									"    var newKey = Object.keys(obj).sort()    ",
									"    var newObj = {}    ",
									"    for (var i = 0; i < newKey.length; i++) {    ",
									"        newObj[newKey[i]] = obj[newKey[i]]    ",
									"    }    ",
									"    return newObj    ",
									"}    ",
									"    ",
									"function getEnvVar(k) {    ",
									"    var v = pm.variables.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.environment.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.globals.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    return null    ",
									"}    ",
									"    ",
									"var ts = Date.parse(new Date()) / 1000    ",
									"pm.variables.set(\"timestamp\", ts)    ",
									"    ",
									"calSign = function(secret) {    ",
									"    var ts = getEnvVar(\"timestamp\")    ",
									"    var queryParam = pm.request.url.query.members    ",
									"    var param = {}    ",
									"    for (var item in queryParam) {    ",
									"        if (queryParam[item].key == \"timestamp\") {    ",
									"            v = ts    ",
									"        } else {    ",
									"            var v = queryParam[item].value    ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {    ",
									"                v = getEnvVar(queryParam[item].key)    ",
									"            }    ",
									"        }    ",
									"        param[queryParam[item].key] = interpolateVar(v)    ",
									"    }    ",
									"    ",
									"    delete param[\"sign\"]    ",
									"    delete param[\"access_token\"]    ",
									"    var sortedObj = objKeySort(param)    ",
									"    var signstring = secret + pm.request.url.getPath()    ",
									"    for (var key in sortedObj) {    ",
									"        signstring = signstring + key + sortedObj[key]    ",
									"    }    ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret    ",
									"    console.log(signstring)    ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()    ",
									"    return sign    ",
									"}    ",
									"    ",
									"function interpolateVar (value) {    ",
									"    const {Property} = require('postman-collection')    ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())    ",
									"}    ",
									"    ",
									"var sign = calSign(secret)    ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"set access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(200);",
									"    pm.globals.set(\"shop_cipher\", jsonData.data.shops[0].cipher);",
									"    pm.environment.set(\"shop_cipher\", jsonData.data.shops[0].cipher);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/authorization/202309/shops?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"authorization",
								"202309",
								"shops"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Authorized Category Assets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Replace with your app secret  ",
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")    ",
									"    ",
									"function objKeySort(obj) {    ",
									"    var newKey = Object.keys(obj).sort()    ",
									"    var newObj = {}    ",
									"    for (var i = 0; i < newKey.length; i++) {    ",
									"        newObj[newKey[i]] = obj[newKey[i]]    ",
									"    }    ",
									"    return newObj    ",
									"}    ",
									"    ",
									"function getEnvVar(k) {    ",
									"    var v = pm.variables.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.environment.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.globals.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    return null    ",
									"}    ",
									"    ",
									"var ts = Date.parse(new Date()) / 1000    ",
									"pm.variables.set(\"timestamp\", ts)    ",
									"    ",
									"calSign = function(secret) {    ",
									"    var ts = getEnvVar(\"timestamp\")    ",
									"    var queryParam = pm.request.url.query.members    ",
									"    var param = {}    ",
									"    for (var item in queryParam) {    ",
									"        if (queryParam[item].key == \"timestamp\") {    ",
									"            v = ts    ",
									"        } else {    ",
									"            var v = queryParam[item].value    ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {    ",
									"                v = getEnvVar(queryParam[item].key)    ",
									"            }    ",
									"        }    ",
									"        param[queryParam[item].key] = interpolateVar(v)    ",
									"    }    ",
									"    ",
									"    delete param[\"sign\"]    ",
									"    delete param[\"access_token\"]    ",
									"    var sortedObj = objKeySort(param)    ",
									"    var signstring = secret + pm.request.url.getPath()    ",
									"    for (var key in sortedObj) {    ",
									"        signstring = signstring + key + sortedObj[key]    ",
									"    }    ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret    ",
									"    console.log(signstring)    ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()    ",
									"    return sign    ",
									"}    ",
									"    ",
									"function interpolateVar (value) {    ",
									"    const {Property} = require('postman-collection')    ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())    ",
									"}    ",
									"    ",
									"var sign = calSign(secret)    ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"set access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(200);",
									"    pm.globals.set(\"shop_cipher\", jsonData.data.shops[0].cipher);",
									"    pm.environment.set(\"shop_cipher\", jsonData.data.shops[0].cipher);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/authorization/202405/category_assets?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"authorization",
								"202405",
								"category_assets"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"set access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(200);",
									"    // pm.globals.set(\"access_token\", jsonData.data.access_token);",
									"    pm.environment.set(\"access_token\", jsonData.data.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.data.refresh_token);",
									"    // pm.environment.set(\"access_token_creator\", jsonData.data.access_token);",
									"    // pm.environment.set(\"refresh_token_creator\", jsonData.data.refresh_token);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://auth.tiktok-shops.com/api/v2/token/refresh?app_key={{app_key}}&app_secret={{app_secret}}&refresh_token={{refresh_token}}&grant_type=refresh_token",
							"protocol": "https",
							"host": [
								"auth",
								"tiktok-shops",
								"com"
							],
							"path": [
								"api",
								"v2",
								"token",
								"refresh"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "app_secret",
									"value": "{{app_secret}}"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}"
								},
								{
									"key": "grant_type",
									"value": "refresh_token"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get Shop Webhooks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/event/202309/webhooks?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"event",
								"202309",
								"webhooks"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Shop Webhooks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"https://webhook.site/26b1528e-a0b0-46a1-b203-9c88276991cf\",\n    \"event_type\": \"ORDER_STATUS_CHANGE\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/event/202309/webhooks?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"event",
								"202309",
								"webhooks"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Shop Webhooks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_type\": \"ORDER_STATUS_CHANGE\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/event/202309/webhooks?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"event",
								"202309",
								"webhooks"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Affiliate",
			"item": [
				{
					"name": "Affiliate Seller",
					"item": [
						{
							"name": "Edit Open Collaboration Settings",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_seller}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auto_add_product\": {\n        \"commission_rate\": 4444,\n        \"enable\": false\n    }\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/open_collaboration_settings?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"open_collaboration_settings"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Seller Search Affiliate Open Collaboration Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"category\": {\n        \"id\": \"601755\"\n    },\n    \"title_keywords\": [\n        \"Open Collaboration Pink\"\n    ],\n    \"sales_price_range\": {\n        \"amount_ge\": \"3.99\",\n        \"amount_lt\": \"4.99\"\n    },\n    \"commission_rate_range\": {\n        \"rate_ge\": 1233,\n        \"rate_lt\": 1235\n    }\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/open_collaborations/products/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=10",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"open_collaborations",
										"products",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Affiliate Product Promotion Link",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    // console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    console.log(signstring, \"=>\", sign)",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/products/1729570313535393936/promotion_link/generate?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"products",
										"1729570313535393936",
										"promotion_link",
										"generate"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Seller Affiliate Orders",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/orders/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=10",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"orders",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Open Collaboration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commission_rate\": 1234,\n    \"product_id\": \"1729568997216587962\",\n    \"require_seller_approve_creator\": false\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/open_collaborations?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"open_collaborations"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Target Collaboration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"API Target Collaboration\",\n    \"message\": \"Created via Postman\",\n    \"end_time\": \"1723194000\",\n    \"products\": [\n        {\n            \"id\": \"1729570313535393936\",\n            \"target_commission_rate\": 2001\n        }\n    ],\n    \"creator_user_ids\": [\n        \"7400230764149244970\"\n    ],\n    \"seller_contact_info\": {\n        \"email\": \"test@tiktokshop.com\"\n    },\n    \"free_sample_rule\": {\n        \"has_free_sample\": true,\n        \"is_sample_approval_exempt\": false\n    }\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/target_collaborations?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"target_collaborations"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Creator Affiliate from Collaboration",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"creator_user_id\": \"7400230764149244970\",\n    \"product_id\": \"1729568997216587962\"\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202405/open_collaborations/129916503437/remove_creator?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202405",
										"open_collaborations",
										"129916503437",
										"remove_creator"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Marketplace Creator Performance",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202406/marketplace_creators/7296094023802078250?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202406",
										"marketplace_creators",
										"7296094023802078250"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Seller Search Creator on Marketplace",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_seller/202406/marketplace_creators/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=12",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_seller",
										"202406",
										"marketplace_creators",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "shop_cipher",
											"value": "{{shop_cipher}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "12"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Affiliate Creator",
					"item": [
						{
							"name": "Add Showcase Products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"add_type\": \"PRODUCT_ID\",\n    \"product_ids\": [\n        \"1729570313535393936\"\n    ],\n    \"product_link\": \"https://www.tiktok.com/t/ZTN4Ltw8v/\"\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/showcases/products/add?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"showcases",
										"products",
										"add"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Showcase Products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/showcases/products?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20&origin=SHOWCASE",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"showcases",
										"products"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										},
										{
											"key": "origin",
											"value": "SHOWCASE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Creator Profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/profiles?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"profiles"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creator Search Open Collaboration Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/open_collaborations/products/search?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"open_collaborations",
										"products",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Creator Target Collaborations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shop_id\": \"7495866839213901968\"\n}"
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/target_collaborations/search?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"target_collaborations",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Creator Affiliate Orders",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_creator/202405/orders/search?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_creator",
										"202405",
										"orders",
										"search"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Affiliate Partner",
					"item": [
						{
							"name": "Create Affiliate Partner Campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Affiliate Partner Campaign Product List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}/products?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}",
										"products"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Affiliate Partner Campaign List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Affiliate Partner Campaign Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token_creator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Review Affiliate Partner Campaign Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}/products/{product_id}/review?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}",
										"products",
										"{product_id}",
										"review"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Affiliate Partner Campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}/partial_edit?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}",
										"partial_edit"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish Affiliate Partner Campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}/publish?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}",
										"publish"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Affiliate Partner Campaign Product Link",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
											"  ",
											"function objKeySort(obj) {  ",
											"    var newKey = Object.keys(obj).sort()  ",
											"    var newObj = {}  ",
											"    for (var i = 0; i < newKey.length; i++) {  ",
											"        newObj[newKey[i]] = obj[newKey[i]]  ",
											"    }  ",
											"    return newObj  ",
											"}  ",
											"  ",
											"function getEnvVar(k) {  ",
											"    var v = pm.variables.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.environment.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    v = pm.globals.get(k)  ",
											"    if (v != null) {  ",
											"        return v  ",
											"    }  ",
											"    return null  ",
											"}  ",
											"  ",
											"var ts = Date.parse(new Date()) / 1000  ",
											"pm.variables.set(\"timestamp\", ts)  ",
											"  ",
											"calSign = function(secret) {  ",
											"    var ts = getEnvVar(\"timestamp\")  ",
											"    var queryParam = pm.request.url.query.members  ",
											"    var param = {}  ",
											"    for (var item in queryParam) {  ",
											"        if (queryParam[item].key == \"timestamp\") {  ",
											"            v = ts  ",
											"        } else {  ",
											"            var v = queryParam[item].value  ",
											"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
											"                v = getEnvVar(queryParam[item].key)  ",
											"            }  ",
											"        }  ",
											"        param[queryParam[item].key] = interpolateVar(v)  ",
											"    }  ",
											"  ",
											"    delete param[\"sign\"]  ",
											"    delete param[\"access_token\"]  ",
											"    var sortedObj = objKeySort(param)  ",
											"    var signstring = secret + pm.request.url.getPath()  ",
											"    for (var key in sortedObj) {  ",
											"        signstring = signstring + key + sortedObj[key]  ",
											"    }  ",
											"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
											"    console.log(signstring)  ",
											"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
											"    return sign  ",
											"}  ",
											"  ",
											"function interpolateVar (value) {  ",
											"    const {Property} = require('postman-collection')  ",
											"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
											"}  ",
											"  ",
											"var sign = calSign(secret)  ",
											"pm.variables.set(\"sign\", sign)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "x-tts-access-token",
										"value": "{{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://open-api.tiktokglobalshop.com/affiliate_partner/202405/campaigns/{campaign_id}/products/{product_id}/promotion_link/generate?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
									"protocol": "https",
									"host": [
										"open-api",
										"tiktokglobalshop",
										"com"
									],
									"path": [
										"affiliate_partner",
										"202405",
										"campaigns",
										"{campaign_id}",
										"products",
										"{product_id}",
										"promotion_link",
										"generate"
									],
									"query": [
										{
											"key": "app_key",
											"value": "{{app_key}}"
										},
										{
											"key": "sign",
											"value": "{{sign}}"
										},
										{
											"key": "timestamp",
											"value": "{{timestamp}}"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Return and Refund API 2.0",
			"item": [
				{
					"name": "Get Aftersale Eligibility 2.0 Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/orders/576493641230094788/aftersale_eligibility?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"orders",
								"576493641230094788",
								"aftersale_eligibility"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Order 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{rn_sandbox_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cancel_reason\": \"ecom_order_delivered_refund_and_return_reason_wrong_product_seller\",\n  \"order_id\": \"576567777908920386\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/cancellations?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"cancellations"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Return 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"order_id\":\"576461001759494414\",\n   \"return_type\":\"REFUND\",\n   \"shipment_type\":\"BUYER_ARRANGE\",\n   \"refund_total\":\"0.10\",\n   \"return_reason\":\"ecom_order_delivered_refund_reason_damaged_seller\",\n   \"currency\":\"USD\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/returns?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"returns"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get Order List 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/order/202309/orders/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=100",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"order",
								"202309",
								"orders",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Details 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/order/202309/orders?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&ids=[\"576717916890501341\"]",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"order",
								"202309",
								"orders"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "ids",
									"value": "[\"576717916890501341\"]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Details 1.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"order_id_list\": [\n    \"576596052466897117\"\n  ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/api/orders/detail/query?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"api",
								"orders",
								"detail",
								"query"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cancel_reason\": \"seller_cancel_reason_wrong_price\",\n  \"order_id\": \"576706287409926365\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/cancellations?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"cancellations"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products 2.0",
			"item": [
				{
					"name": "Get Attributes 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/categories/862864/attributes?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"categories",
								"862864",
								"attributes"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else { ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/categories?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&category_version=v2",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"categories"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "category_version",
									"value": "v2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories Rules 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/categories/880528/rules?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"categories",
								"880528",
								"rules"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Listing Schemas",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202401/listing_schemas?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&category_ids=[907528]",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202401",
								"listing_schemas"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "category_ids",
									"value": "[907528]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Listing Prerequisites",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202312/prerequisites?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202312",
								"prerequisites"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Brands 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/brands?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=100",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"brands"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Details 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729668903338283944?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729668903338283944"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Information Issue Diagnosis",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							}
						],
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202405/products/diagnoses?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202405",
								"products",
								"diagnoses"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Global Product Details 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/global_products/1729412280854417418?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"global_products",
								"1729412280854417418"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Men's Fashion Sports Low Cut Cotton Breathable Ankle Short Boat Invisible Socks\",\n  \"description\": \"<p>test test</p>\",\n  \"category_id\":\"952200\",\n  \"main_images\": [\n            {\n                \"height\": 1000,\n                \"thumb_urls\": [\n                    \"https://p19-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/fd167ff41ca04d7284237b8b45a4fac0~tplv-omjb5zjo8w-resize-jpeg:300:300.jpeg?from=520841845\",\n                    \"https://p16-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/fd167ff41ca04d7284237b8b45a4fac0~tplv-omjb5zjo8w-resize-jpeg:300:300.jpeg?from=520841845\"\n                ],\n                \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/fd167ff41ca04d7284237b8b45a4fac0\",\n                \"urls\": [\n                    \"https://p16-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/fd167ff41ca04d7284237b8b45a4fac0~tplv-omjb5zjo8w-origin-jpeg.jpeg?from=520841845\",\n                    \"https://p19-oec-ttp.tiktokcdn-us.com/tos-useast5-i-omjb5zjo8w-tx/fd167ff41ca04d7284237b8b45a4fac0~tplv-omjb5zjo8w-origin-jpeg.jpeg?from=520841845\"\n                ],\n                \"width\": 1000\n            }\n        ],\n    \"skus\": [\n    {\n      \"inventory\": [\n        {\n          \"quantity\": 20,\n          \"warehouse_id\": \"7333596113700538155\"\n        }\n      ],\n      \"price\": {\n        \"amount\": \"10.21\",\n        \"currency\": \"USD\"\n      },\n      \"seller_sku\": \"Color-Red-XM001\"\n    }\n  ],\n  \"package_dimensions\": {\n    \"height\": \"10\",\n    \"length\": \"10\",\n    \"unit\": \"INCH\",\n    \"width\": \"10\"\n  },\n  \"package_weight\": {\n    \"unit\": \"POUND\",\n    \"value\": \"5\"\n  }\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729446889143242762?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729446889143242762"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"skus\": [\n        {\n            \"price\": {\n                \"amount\": \"10\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Red\",\n                    \"sku_img\": {\n                        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/d9d9c89b25d6478d9e454c118d9b0a5d\"\n                    }\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Small\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7341080923485996842\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"R-SM-1\"\n        },\n        {\n            \"price\": {\n                \"amount\": \"10\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Red\",\n                    \"sku_img\": {\n                        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/d9d9c89b25d6478d9e454c118d9b0a5d\"\n                    }\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Large\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7341080923485996842\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"R-LG-1\"\n        },\n        {\n            \"price\": {\n                \"amount\": \"10\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Blue\",\n                    \"sku_img\": {\n                        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/d9d9c89b25d6478d9e454c118d9b0a5d\"\n                    }\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Small\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7341080923485996842\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"B-SM-1\"\n        },\n        {\n            \"price\": {\n                \"amount\": \"10\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Blue\"\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Large\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7341080923485996842\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"B-LG-1\"\n        }\n    ],\n    \"package_dimensions\": {\n        \"length\": \"1\",\n        \"width\": \"1\",\n        \"height\": \"1\",\n        \"unit\": \"INCH\"\n    },\n    \"title\": \"HazNat API Product Test\",\n    \"description\": \"This product was created using the API for testing purposes\",\n    \"category_id\": \"874504\",\n    \"package_weight\": {\n        \"value\": \"1\",\n        \"unit\": \"POUND\"\n    },\n    \"main_images\": [\n        {\n            \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n        }\n    ],\n    \"certifications\": [\n        {\n            \"id\": \"7216311839301388037\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        },\n        {\n            \"id\": \"7216311839301404421\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        }\n    ],\n    \"brand_id\": \"7277482095260501766\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Hazmat Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_attributes\": [\n        {\n            \"id\": \"100336\",\n            \"values\": [{\"name\": \"USA\"}]\n        },\n        {\n            \"id\": \"101200\",\n            \"values\": [{\"id\": \"1005753\"}]\n        },\n        {\n            \"id\": \"100492\",\n            \"values\": [{\"name\": \"Pineapple Under The Sea\"}]\n        },\n        {\n            \"id\": \"100433\",\n            \"values\": [{\"id\": \"1003300\"}]\n        },\n        {\n            \"id\": \"101610\", \n            \"values\":[{\"id\": \"1024358\"}]\n        },\n        {\n            \"id\": \"100216\",\n            \"values\": [{\"id\": \"1024361\"}]\n        },\n        {\n            \"id\": \"101611\",\n            \"values\": [{\"id\": \"1024364\"}]\n        },\n        {\n            \"id\": \"101623\",\n            \"values\": [{\"name\": \"1\"}]\n        },\n        {\n            \"id\": \"101624\",\n            \"values\": [{\"name\": \"666\"}]\n        },\n        {\n            \"id\": \"101614\",\n            \"values\": [{\"name\": \"11\"}]\n        },\n        {\n            \"id\": \"101574\",\n            \"values\": [{\"id\": \"1000059\"}]\n        },\n        {\n            \"id\": \"101571\",\n            \"values\": [{\"id\": \"1000059\"}]\n        },\n        {\n            \"id\": \"101619\",\n            \"values\": [{\"id\": \"1000059\"}]\n        }\n    ],\n    \"skus\": [\n        {\n            \"price\": {\n                \"amount\": \"4.20\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Green\",\n                    \"sku_img\": {\n                        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/d9d9c89b25d6478d9e454c118d9b0a5d\"\n                    }\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Fat\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7130468087523231531\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"PFR-1\"\n        }\n    ],\n    \"package_dimensions\": {\n        \"length\": \"1\",\n        \"width\": \"1\",\n        \"height\": \"1\",\n        \"unit\": \"INCH\"\n    },\n    \"title\": \"[REFURB] Test Refurbished Pet Companion For Testing Needs and Support\",\n    \"description\": \"This product was created using the API for refurb use cases\",\n    \"category_id\": \"862864\",\n    \"package_weight\": {\n        \"value\": \"1\",\n        \"unit\": \"POUND\"\n    },\n    \"main_images\": [\n        {\n            \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n        }\n    ],\n    \"certifications\": [\n        {\n            \"id\": \"7216311839301388037\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        },\n        {\n            \"id\": \"7216311839301404421\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        },\n        {\n            \"id\": \"1729439947134305535\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        }\n    ],\n    \"brand_id\": \"7277482095260501766\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Refurb Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_attributes\": [\n        {\n            \"id\": \"101670\",\n            \"values\": [{\"name\": \"1GB\"}]\n        },\n        {\n            \"id\": \"100492\",\n            \"values\": [{\"name\": \"Pineapple Under The Sea\"}]\n        },\n        {\n            \"id\": \"102181\",\n            \"values\": [{\"id\": \"1134595\"}]\n        },\n        {\n            \"id\": \"101110\",\n            \"values\": [{\"name\": \"SpongeBob\"}]\n        },\n        {\n            \"id\": \"101305\", \n            \"values\":[{\"id\": \"1020437\"}]\n        },\n        {\n            \"id\": \"102184\",\n            \"values\": [{\"id\": \"1024286\"}]\n        },\n        {\n            \"id\": \"101665\",\n            \"values\": [{\"name\": \"Dual\"}]\n        },\n        {\n            \"id\": \"101125\",\n            \"values\": [{\"id\": \"1048753\"}]\n        },\n        {\n            \"id\": \"101671\",\n            \"values\": [{\"name\": \"REDCAT\"}]\n        },\n        {\n            \"id\": \"101328\",\n            \"values\": [{\"name\": \"RED\"}]\n        },\n        {\n            \"id\": \"101663\",\n            \"values\": [{\"name\": \"AMD\"}]\n        },\n        {\n            \"id\": \"101668\",\n            \"values\": [{\"name\": \"MenTel ISV\"}]\n        },\n        {\n            \"id\": \"102182\",\n            \"values\": [{\"name\": \"Nein\"}]\n        },\n        {\n            \"id\": \"102183\",\n            \"values\": [{\"name\": \"8x11\"}]\n        },\n        {\n            \"id\": \"101508\",\n            \"values\": [{\"name\": \"AMOLED\"}]\n        },\n        {\n            \"id\": \"100345\",\n            \"values\": [{\"name\": \"Especially Limited\"}]\n        },\n        {\n            \"id\": \"100802\",\n            \"values\": [{\"name\": \"666999\"}]\n        },\n        {\n            \"id\": \"101669\",\n            \"values\": [{\"name\": \"32MP\"}]\n        }\n\n    ],\n    \"skus\": [\n        {\n            \"price\": {\n                \"amount\": \"4.20\",\n                \"currency\": \"USD\"\n            },\n            \"sales_attributes\": [\n                {\n                    \"id\": \"100000\",\n                    \"name\": \"Color\",\n                    \"value_name\": \"Green\",\n                    \"sku_img\": {\n                        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/d9d9c89b25d6478d9e454c118d9b0a5d\"\n                    }\n                },\n                {\n                    \"name\": \"Size\",\n                    \"value_name\": \"Fat\",\n                    \"is_custom\": true\n                }\n            ],\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7130468087523231531\",\n                    \"quantity\": 10\n                }\n            ],\n            \"seller_sku\": \"PFR-1\"\n        }\n    ],\n    \"package_dimensions\": {\n        \"length\": \"1\",\n        \"width\": \"1\",\n        \"height\": \"1\",\n        \"unit\": \"INCH\"\n    },\n    \"title\": \"[REFURB] Test Refurbished Pet Companion For Testing Needs and Support\",\n    \"description\": \"This product was created using the API for refurb use cases\",\n    \"category_id\": \"862864\",\n    \"package_weight\": {\n        \"value\": \"1\",\n        \"unit\": \"POUND\"\n    },\n    \"main_images\": [\n        {\n            \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n        }\n    ],\n    \"certifications\": [\n        {\n            \"id\": \"8647871102264902855\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        },\n        {\n            \"id\": \"8647871110086427847\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        },\n        {\n            \"id\": \"1729439947134305535\",\n            \"images\": [\n                {\n                    \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n                }\n            ]\n        }\n    ],\n    \"brand_id\": \"7277482095260501766\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Virtual Combined Listing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"This product was created using the API for testing purposes\",\n    \"category_id\": \"600017\",\n    \"main_images\": [\n        {\n            \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/feba0a07377544d985144b62b026a947\"\n        }\n    ],\n    \"skus\": [\n        {\n            \"inventory\": [\n                {\n                    \"warehouse_id\": \"7398159086381598507\",\n                    \"inventory\": 10\n                }\n            ],\n            \"price\": {\n                \"amount\": \"4.99\",\n                \"currency\": \"USD\"\n            },\n            \"combined_skus\": [\n                {\n                    \"product_id\": \"1729624369950593168\",\n                    \"sku_id\": \"RB\",\n                    \"sku_count\": 11\n                },\n                {\n                    \"product_id\": \"1729624415893360784\",\n                    \"sku_id\": \"GB\",\n                    \"sku_count\": 11                    \n                }\n            ]            \n        }\n    ],\n    \"title\": \"New Baloon Pack Multicolor Red Green Party Supplies\",\n    \"package_weight\": {\n        \"value\": \"1\",\n        \"unit\": \"POUND\"\n    },\n    \"primary_combined_product_id\": \"1729624369950593168\",\n    \"package_dimensions\": {\n        \"length\": \"1\",\n        \"width\": \"1\",\n        \"height\": \"1\",\n        \"unit\": \"INCH\"\n    }\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial Edit Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"skus\": [\n    {\n      \"inventory\": [\n        {\n          \"quantity\": 100,\n          \"warehouse_id\": \"7322043992425727786\"\n        }\n      ],\n      \"price\": {\n        \"amount\": \"10.55\",\n        \"currency\": \"USD\"\n      }\n    }\n ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729435694595215743/partial_edit?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729435694595215743",
								"partial_edit"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Product Image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": "/Users/bytedance/Desktop/_/2-sem-of-grooves-in-lp-record-dr-tony-brainscience-photo-library.jpg"
								},
								{
									"key": "use_case",
									"value": "MAIN_IMAGE",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/images/upload?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"images",
								"upload"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Product File",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")",
									"    // console.log(\"Timestamp:\", ts)",
									"    var queryParam = pm.request.url.query.members",
									"    // console.log(\"queryParam:\", queryParam)",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]",
									"    // console.log(\"Param:\", param)",
									"    var sortedObj = objKeySort(param)  ",
									"    console.log(\"sortedObj:\", sortedObj)",
									"    var signstring = secret + pm.request.url.getPath()",
									"    console.log(\"signstring_start:\", signstring)",
									"    for (var key in sortedObj) {  ",
									"        console.log(\"for var key in sortedObj\")",
									"        signstring = signstring + key + sortedObj[key]",
									"        console.log(\"signstring_for:\", signstring)",
									"    }",
									"    console.log(\"signstring_end:\", signstring)",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(\"signstring_final:\", signstring)",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    console.log(\"Signature:\", sign)",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)",
									"console.log(\"Signature:\", sign)",
									"console.log(\"TimeStamp:\", ts)",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": "/Users/bytedance/Downloads/Connector ARD.pdf"
								},
								{
									"key": "name",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/files/upload?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"files",
								"upload"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Recommend Category 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"console.log(\"SECRET:\", secret)",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token_seller}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"product_title\": \"groovy black vinyl microscopic\",\n  \"description\": \"{\\\"gender\\\":\\\"\\\",\\\"material\\\":[],\\\"itemName\\\":\\\"\\\",\\\"tariffCode\\\":\\\"\\\",\\\"tariffCodeCa\\\":null}\",\n  \"images\": [\n    {\n        \"uri\": \"tos-useast5-i-omjb5zjo8w-tx/4e722bde7b584e3dafa4bed8e504ddd7\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/categories/recommend?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&category_version=v2",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"categories",
								"recommend"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "category_version",
									"value": "v2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Product 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"ACTIVATE\",\n    \"listing_quality_tier\": \"GOOD\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=100",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Inventory",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_ids\": [\n    \"1729444861852029106\"\n  ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/inventory/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=100",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"inventory",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Inventory 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"skus\": [\n    {\n      \"id\": \"1729465787539296266\",\n      \"inventory\": [\n        {\n          \"quantity\": 10,\n          \"warehouse_id\": \"7333596113700538155\"\n        }\n      ]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729446889143242762/inventory/update?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729446889143242762",
								"inventory",
								"update"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Price 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"skus\":[\n      {\n         \"id\":\"1729420820619431946\",\n         \"price\":{\n            \"amount\":\"0.19\",\n            \"currency\":\"USD\"\n         }\n      }\n   ]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729420820619366410/prices/update?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729420820619366410",
								"prices",
								"update"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Product Image 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": "/Users/bytedance/Downloads/Square_200x200.jpg"
								}
							]
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/images/upload?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"images",
								"upload"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fulfillment",
			"item": [
				{
					"name": "Get Package Detail 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/packages/1152941035106111758?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"packages",
								"1152941035106111758"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Package Shipping Document 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/packages/1232131231243123213/shipping_documents?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&document_type=SHIPPING_LABEL&document_size=4x6",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"packages",
								"1232131231243123213",
								"shipping_documents"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "document_type",
									"value": "SHIPPING_LABEL"
								},
								{
									"key": "document_size",
									"value": "4x6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Package 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": \"576558311250235744\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/packages?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"packages"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Eligible Shipping Service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dimension\": {\n    \"height\": \"1.1\",\n    \"length\": \"0.3\",\n    \"unit\": \"INCH\",\n    \"width\": \"0.2\"\n  },\n  \"order_line_item_ids\": [\n    \"576658735802912834\"\n  ],\n  \"weight\": {\n    \"unit\": \"GRAM\",\n    \"value\": \"0.4\"\n  }\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/orders/576658735802781762/shipping_services/query?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"orders",
								"576658735802781762",
								"shipping_services",
								"query"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Package As Shipped",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipping_provider_id\": \"7117858858072016686\",\n  \"tracking_number\": \"9400100012345678901234\"\n}\n"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/orders/576649811177410626/packages?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"orders",
								"576649811177410626",
								"packages"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Package 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{rn_sandbox_access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": \"576558311250235744\"\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/fulfillment/202309/packages/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}&page_size=20",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"fulfillment",
								"202309",
								"packages",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "page_size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ship Package",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{rn_sandbox_access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"package_id\": \"123456\",\n  \"pick_up\": {\n    \"pick_up_end_time\": 1623812664,\n    \"pick_up_start_time\": 1623812664\n  },\n  \"pick_up_type\": 1,\n  \"self_shipment\": {\n    \"shipping_provider_id\": \"6965352555291346690\",\n    \"tracking_number\": \"576460868968549926\"\n  }\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/product/202309/products/1729410763598827530/partial_edit?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"product",
								"202309",
								"products",
								"1729410763598827530",
								"partial_edit"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logistics",
			"item": [
				{
					"name": "Get Warehouse Delivery Options",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/logistics/202309/warehouses/7361004043308140334/delivery_options?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"logistics",
								"202309",
								"warehouses",
								"7361004043308140334",
								"delivery_options"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Warehouse List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/logistics/202309/warehouses?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"logistics",
								"202309",
								"warehouses"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shipping Providers 2.0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/logistics/202309/delivery_options/7129736060325594926/shipping_providers?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"logistics",
								"202309",
								"delivery_options",
								"7129736060325594926",
								"shipping_providers"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Promotions",
			"item": [
				{
					"name": "Create Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"activity_type\": \"FLASHSALE\",\n  \"begin_time\": 1723208460,\n  \"end_time\": 1723381260,\n  \"product_level\": \"PRODUCT\",\n  \"title\": \"Gordon Down!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Activities",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/7401303503030880046?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"7401303503030880046"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Activity Product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activity_id\": \"7400792557250168618\",\n    \"products\": [\n        {\n            \"activity_price_amount\": \"2.5\",\n            \"id\": \"1729570417992634512\",\n            \"quantity_limit\": 4,\n            \"quantity_per_user\": 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/{7400792557250168618/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"{7400792557250168618",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Activity Product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/{{activity_id}}/products?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"{{activity_id}}",
								"products"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/{{activity_id}}/deactivate?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"{{activity_id}}",
								"deactivate"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"begin_time\": 1723208100,\n    \"end_time\": 1723294500,\n    \"title\": \"It's Gordon Down!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/activities/7401306782854825770?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"activities",
								"7401306782854825770"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Coupons",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202309/promotion/202406/coupons/search?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202309",
								"promotion",
								"202406",
								"coupons",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Coupon",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/promotion/202406/coupons/{coupon_id}?app_key={{app_key}}&shop_cipher={{shop_cipher}}&sign={{sign}}&timestamp={{timestamp}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"promotion",
								"202406",
								"coupons",
								"{coupon_id}"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Finance",
			"item": [
				{
					"name": "Get Statements",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/**",
									" * secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)",
									"**/",
									"",
									"// Replace with your app secret  ",
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")  ",
									"    ",
									"function objKeySort(obj) {    ",
									"    var newKey = Object.keys(obj).sort()    ",
									"    var newObj = {}    ",
									"    for (var i = 0; i < newKey.length; i++) {    ",
									"        newObj[newKey[i]] = obj[newKey[i]]    ",
									"    }    ",
									"    return newObj    ",
									"}    ",
									"    ",
									"function getEnvVar(k) {    ",
									"    var v = pm.variables.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.environment.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    v = pm.globals.get(k)    ",
									"    if (v != null) {    ",
									"        return v    ",
									"    }    ",
									"    return null    ",
									"}    ",
									"    ",
									"var ts = Date.parse(new Date()) / 1000    ",
									"pm.variables.set(\"timestamp\", ts)    ",
									"    ",
									"calSign = function(secret) {    ",
									"    var ts = getEnvVar(\"timestamp\")    ",
									"    var queryParam = pm.request.url.query.members    ",
									"    var param = {}    ",
									"    for (var item in queryParam) {    ",
									"        if (queryParam[item].key == \"timestamp\") {    ",
									"            v = ts    ",
									"        } else {    ",
									"            var v = queryParam[item].value    ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {    ",
									"                v = getEnvVar(queryParam[item].key)    ",
									"            }    ",
									"        }    ",
									"        param[queryParam[item].key] = interpolateVar(v)    ",
									"    }    ",
									"    ",
									"    delete param[\"sign\"]    ",
									"    delete param[\"access_token\"]    ",
									"    var sortedObj = objKeySort(param)    ",
									"    var signstring = secret + pm.request.url.getPath()    ",
									"    for (var key in sortedObj) {    ",
									"        signstring = signstring + key + sortedObj[key]    ",
									"    }    ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret    ",
									"    console.log(signstring)    ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()    ",
									"    return sign    ",
									"}    ",
									"    ",
									"function interpolateVar (value) {    ",
									"    const {Property} = require('postman-collection')    ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())    ",
									"}    ",
									"    ",
									"var sign = calSign(secret)    ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/finance/202309/statements?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&sort_field=statement_time&page_size=100",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"finance",
								"202309",
								"statements"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sort_field",
									"value": "statement_time"
								},
								{
									"key": "page_size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Statement Transactions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/finance/202309/statements/7208811788069193518/statement_transactions?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&sort_field=order_create_time",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"finance",
								"202309",
								"statements",
								"7208811788069193518",
								"statement_transactions"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sort_field",
									"value": "order_create_time"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order Statement Transactions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/finance/202309/orders/576582209287590109/statement_transactions?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&sort_field=order_create_time",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"finance",
								"202309",
								"orders",
								"576582209287590109",
								"statement_transactions"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sort_field",
									"value": "order_create_time"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/finance/202309/payments?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&sort_field=create_time",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"finance",
								"202309",
								"payments"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "sort_field",
									"value": "create_time"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Service",
			"item": [
				{
					"name": "Get Conversations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/customer_service/202309/conversations?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&page_size=10",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"customer_service",
								"202309",
								"conversations"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "page_size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Agent Settings",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/customer_service/202309/agents/settings?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"customer_service",
								"202309",
								"agents",
								"settings"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Return / Refund",
			"item": [
				{
					"name": "Get Reject Reasons",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/reject_reasons?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}&locale=en-US&return_or_cancel_id=4035238153899184349",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"reject_reasons"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								},
								{
									"key": "locale",
									"value": "en-US"
								},
								{
									"key": "return_or_cancel_id",
									"value": "4035238153899184349"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Cancellations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"secret = pm.globals.get(\"app_secret\") || pm.environment.get(\"app_secret\")",
									"  ",
									"function objKeySort(obj) {  ",
									"    var newKey = Object.keys(obj).sort()  ",
									"    var newObj = {}  ",
									"    for (var i = 0; i < newKey.length; i++) {  ",
									"        newObj[newKey[i]] = obj[newKey[i]]  ",
									"    }  ",
									"    return newObj  ",
									"}  ",
									"  ",
									"function getEnvVar(k) {  ",
									"    var v = pm.variables.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.environment.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    v = pm.globals.get(k)  ",
									"    if (v != null) {  ",
									"        return v  ",
									"    }  ",
									"    return null  ",
									"}  ",
									"  ",
									"var ts = Date.parse(new Date()) / 1000  ",
									"pm.variables.set(\"timestamp\", ts)  ",
									"  ",
									"calSign = function(secret) {  ",
									"    var ts = getEnvVar(\"timestamp\")  ",
									"    var queryParam = pm.request.url.query.members  ",
									"    var param = {}  ",
									"    for (var item in queryParam) {  ",
									"        if (queryParam[item].key == \"timestamp\") {  ",
									"            v = ts  ",
									"        } else {  ",
									"            var v = queryParam[item].value  ",
									"            if (v == null || v == \"{{\" + queryParam[item].key + \"}}\") {  ",
									"                v = getEnvVar(queryParam[item].key)  ",
									"            }  ",
									"        }  ",
									"        param[queryParam[item].key] = interpolateVar(v)  ",
									"    }  ",
									"  ",
									"    delete param[\"sign\"]  ",
									"    delete param[\"access_token\"]  ",
									"    var sortedObj = objKeySort(param)  ",
									"    var signstring = secret + pm.request.url.getPath()  ",
									"    for (var key in sortedObj) {  ",
									"        signstring = signstring + key + sortedObj[key]  ",
									"    }  ",
									"    signstring = signstring + interpolateVar(pm.request.body.toString()) +  secret  ",
									"    console.log(signstring)  ",
									"    sign = CryptoJS.HmacSHA256(signstring, secret).toString()  ",
									"    return sign  ",
									"}  ",
									"  ",
									"function interpolateVar (value) {  ",
									"    const {Property} = require('postman-collection')  ",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject())  ",
									"}  ",
									"  ",
									"var sign = calSign(secret)  ",
									"pm.variables.set(\"sign\", sign)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-tts-access-token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_ids\": [\"576615535602340061\"]\n}"
						},
						"url": {
							"raw": "https://open-api.tiktokglobalshop.com/return_refund/202309/cancellations/search?app_key={{app_key}}&sign={{sign}}&timestamp={{timestamp}}&shop_cipher={{shop_cipher}}",
							"protocol": "https",
							"host": [
								"open-api",
								"tiktokglobalshop",
								"com"
							],
							"path": [
								"return_refund",
								"202309",
								"cancellations",
								"search"
							],
							"query": [
								{
									"key": "app_key",
									"value": "{{app_key}}"
								},
								{
									"key": "sign",
									"value": "{{sign}}"
								},
								{
									"key": "timestamp",
									"value": "{{timestamp}}"
								},
								{
									"key": "shop_cipher",
									"value": "{{shop_cipher}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "shop_cipher",
			"value": "",
			"disabled": true
		}
	]
}