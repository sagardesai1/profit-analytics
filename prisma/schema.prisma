datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id           String            @id @default(cuid())
    email        String            @unique
    createdAt    DateTime          @default(now())
    products     Product[] // One-to-many relation with products
    tiktokOrders TiktokOrder[] // One-to-many relation with TikTok orders
    productSales DailyProductPnL[] // One-to-many relation with product sales summary
}

model TiktokOrder {
    id                                 Int       @id @default(autoincrement())
    statementDateUtc                   DateTime?
    statementId                        String?
    paymentId                          String?
    status                             String?
    type                               String?
    currency                           String?
    orderAdjustmentId                  String?
    skuId                              String?
    quantity                           Int?
    productName                        String?
    orderCreatedDate                   DateTime?
    totalSettlementAmount              Float?
    netSales                           Float?
    grossSales                         Float?
    grossSalesRefund                   Float?
    sellerDiscount                     Float?
    sellerDiscountRefund               Float?
    shipping                           Float?
    tiktokShippingFee                  Float?
    fbtShippingFee                     Float?
    fbtFulfillmentFee                  Float?
    customerShippingFeeOffset          Float?
    limitedTimeSignupShippingIncentive Float?
    signatureConfirmationFee           Float?
    shippingInsuranceFee               Float?
    customerPaidShippingFee            Float?
    customerPaidShippingFeeRefund      Float?
    tiktokShippingIncentive            Float?
    tiktokShippingIncentiveRefund      Float?
    shippingFeeSubsidy                 Float?
    returnShippingFee                  Float?
    fees                               Float?
    transactionFee                     Float?
    referralFee                        Float?
    refundAdminFee                     Float?
    affiliateCommission                Float?
    affiliatePartnerCommission         Float?
    adjustmentAmount                   Float?
    relatedOrderId                     String?

    userId String
    user   User   @relation(fields: [userId], references: [id]) // Relation to User
}

model Product {
    id              Int      @id @default(autoincrement())
    skuId           String   @unique
    productName     String
    createdAt       DateTime @default(now())
    fbmShippingCost Float?
    profitPerUnit   Float?
    userId          String
    user            User     @relation(fields: [userId], references: [id])

    pnlSummaries DailyProductPnL[]
    costOfGoods  CostOfGoods[]
    expenses     Expense[]
}

model DailyProductPnL {
    id                Int       @id @default(autoincrement())
    orderAdjustmentId String?
    orderCreatedDate  DateTime?

    unitsSold Int?
    refunds   Int?

    sales                Float?
    grossSales           Float?
    grossSalesRefund     Float?
    sellerDiscount       Float?
    sellerDiscountRefund Float?

    promoCosts Float?

    marketingCosts                  Float?
    sponsoredAdsCosts               Float?
    affiliateCommissionCosts        Float?
    affiliatePartnerCommissionCosts Float?

    refundCosts                       Float?
    customerPaidShippingFeeRefund     Float?
    tiktokShopShippingIncentiveRefund Float?
    refundAdministrationFee           Float?

    tiktokFees     Float?
    transactionFee Float?
    referralFee    Float?

    shippingFees                       Float?
    tiktokShopShippingFee              Float?
    fulfilledByTiktokShopShippingFee   Float?
    shippingInsuranceFee               Float?
    customerPaidShippingFee            Float?
    tiktokShippingIncentive            Float?
    shippingFeeSubsidy                 Float?
    returnShippingFee                  Float?
    fbtFulfillmentFee                  Float?
    customerShippingFeeOffset          Float?
    limitedTimeSignupShippingIncentive Float?

    adjustmentFees                  Float?
    logisticsAdjustment             Float?
    logisticsReimbursement          Float?
    logisticsDeduction              Float?
    tiktokShopReimbursement         Float?
    policyViolationDeduction        Float?
    tiktokFeesAdjustment            Float?
    adjustmentFromSettlementAccount Float?
    chargeback                      Float?
    otherAdjustment                 Float?
    fbtWarehouseServiceFee          Float?

    cogs            Float?
    grossProfit     Float?
    expenses        Float?
    netProfit       Float?
    estimatedPayout Float?
    lastUpdated     DateTime @default(now())

    productId Int
    userId    String
    product   Product @relation(fields: [productId], references: [id])
    user      User    @relation(fields: [userId], references: [id])

    @@unique([productId, userId, orderCreatedDate])
    @@index([orderCreatedDate])
}

model CostOfGoods {
    id    Int   @id @default(autoincrement())
    price Float

    productId Int
    product   Product @relation(fields: [productId], references: [id])

    @@index([productId])
}

model Expense {
    id     Int      @id @default(autoincrement())
    date   DateTime
    name   String
    amount Float

    productId Int?
    product   Product? @relation(fields: [productId], references: [id])

    @@index([productId, date])
}
